#!/usr/bin/env python

from args import parser, get_config_module

vals = parser.parse_args()
config = get_config_module(vals.config)

import daemon
from time import sleep

dconf = config.daemon_config

import os
import pwd
import grp
import sys
import logging


user = dconf.get("user", None)
group = dconf.get("group", None)

if user is None:
    uid = os.getuid()
    homedir = os.path.expanduser("~")
else:
    try:
        pwdinfo = pwd.getpwnam(user)
        uid = pwdinfo.pw_uid
        homedir = pwdinfo.pw_dir
    except KeyError:
        print "Failed to retrieve UID for user '%s'; exiting." % user
        sys.exit(1)

if group is None:
    gid = os.getgid()
else:
    try:
        gid = grp.getgrnam(group).gr_gid
    except KeyError:
        print "Failed to retrieve GID for group '%s'; exiting." % group
        sys.exit(1)

logfile = open(config.log_config["filename"], "a")

with daemon.DaemonContext(working_directory=homedir, uid=uid, gid=gid, stdout=logfile, stderr=logfile):
    from basejumper.jumper import startd
    logging.basicConfig(**config.log_config)
    log = logging.getLogger("basejumpd")
    log.info("Starting daemon")
    log.info("UID: %d" % uid)
    log.info("GID: %d" % gid)
    # Need to update $HOME for hsi
    os.environ["HOME"] = homedir
    log.info("$HOME: %s" % os.environ["HOME"])
    startd(config, fork=False)
    log.info("Daemon crashed")
